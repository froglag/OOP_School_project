<?xml version="1.0"?>

<st-source>
<time-stamp>From VisualWorksÂ® NonCommercial, 7.4.1 of May 30, 2006 on April 23, 2023 at 11:08:15 am</time-stamp>


<class>
<name>Zamestnanci</name>
<environment>Smalltalk</environment>
<super>DaskalosDataObject</super>
<private>false</private>
<indexed-type>none</indexed-type>
<inst-vars>jmeno prijmeni pozice tridy sluzby </inst-vars>
<class-inst-vars></class-inst-vars>
<imports></imports>
<category>DaskalosUserClasses</category>
<attributes>
<package>DaskalosUserClasses</package>
</attributes>
</class>

<!-- -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -   -->


<methods>
<class-id>Zamestnanci class</class-id> <category>instance variables behavior</category>

<body package="DaskalosUserClasses" selector="instVarTypes">instVarTypes
"resource for Daskalos"
^((Core.Dictionary new) add: (#tridy -&gt; Core.Number); add: (#sluzby -&gt; Core.Set); add: (#jmeno -&gt; Core.String); add: (#pozice -&gt; Core.String); add: (#prijmeni -&gt; Core.String); yourself)</body>
</methods>

<!-- -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -   -->


<methods>
<class-id>Zamestnanci</class-id> <category>accessing</category>

<body package="DaskalosUserClasses" selector="jmeno">jmeno
"generated by Daskalos"

     ^jmeno</body>

<body package="DaskalosUserClasses" selector="jmeno:">jmeno: anObject
"generated by Daskalos"

     jmeno := (self checkValue: anObject forVariable: #jmeno)</body>

<body package="DaskalosUserClasses" selector="pozice">pozice
"generated by Daskalos"

     ^pozice</body>

<body package="DaskalosUserClasses" selector="pozice:">pozice: anObject
"generated by Daskalos"

     pozice := (self checkValue: anObject forVariable: #pozice)</body>

<body package="DaskalosUserClasses" selector="prijmeni">prijmeni
"generated by Daskalos"

     ^prijmeni</body>

<body package="DaskalosUserClasses" selector="prijmeni:">prijmeni: anObject
"generated by Daskalos"

     prijmeni := (self checkValue: anObject forVariable: #prijmeni)</body>

<body package="DaskalosUserClasses" selector="sluzby">sluzby
"generated by Daskalos"

     ^sluzby</body>

<body package="DaskalosUserClasses" selector="tridy">tridy
"generated by Daskalos"

     ^tridy</body>

<body package="DaskalosUserClasses" selector="tridy:">tridy: anObject
"generated by Daskalos"

     tridy := (self checkValue: anObject forVariable: #tridy)</body>
</methods>

<methods>
<class-id>Zamestnanci</class-id> <category>instance initialization</category>

<body package="DaskalosUserClasses" selector="initialize">initialize
"generated by Daskalos"

     super initialize.
     jmeno := nil.
     prijmeni := nil.
     pozice := nil.
     tridy := nil.
     sluzby := Set new.
</body>
</methods>


<class>
<name>Sluzby</name>
<environment>Smalltalk</environment>
<super>DaskalosDataObject</super>
<private>false</private>
<indexed-type>none</indexed-type>
<inst-vars>nazev </inst-vars>
<class-inst-vars></class-inst-vars>
<imports></imports>
<category>DaskalosUserClasses</category>
<attributes>
<package>DaskalosUserClasses</package>
</attributes>
</class>

<!-- -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -   -->


<methods>
<class-id>Sluzby class</class-id> <category>instance variables behavior</category>

<body package="DaskalosUserClasses" selector="instVarTypes">instVarTypes
"resource for Daskalos"
^((Core.Dictionary new) add: (#nazev -&gt; Core.String); yourself)</body>
</methods>

<!-- -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -   -->


<methods>
<class-id>Sluzby</class-id> <category>accessing</category>

<body package="DaskalosUserClasses" selector="nazev">nazev
"generated by Daskalos"

     ^nazev</body>

<body package="DaskalosUserClasses" selector="nazev:">nazev: anObject
"generated by Daskalos"

     nazev := (self checkValue: anObject forVariable: #nazev)</body>
</methods>

<methods>
<class-id>Sluzby</class-id> <category>instance initialization</category>

<body package="DaskalosUserClasses" selector="initialize">initialize
"generated by Daskalos"

     super initialize.
     nazev := nil.
</body>
</methods>


<class>
<name>Poruchy</name>
<environment>Smalltalk</environment>
<super>DaskalosDataObject</super>
<private>false</private>
<indexed-type>none</indexed-type>
<inst-vars>nazev </inst-vars>
<class-inst-vars></class-inst-vars>
<imports></imports>
<category>DaskalosUserClasses</category>
<attributes>
<package>DaskalosUserClasses</package>
</attributes>
</class>

<!-- -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -   -->


<methods>
<class-id>Poruchy class</class-id> <category>instance variables behavior</category>

<body package="DaskalosUserClasses" selector="instVarTypes">instVarTypes
"resource for Daskalos"
^((Core.Dictionary new) add: (#nazev -&gt; Core.String); yourself)</body>
</methods>

<!-- -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -   -->


<methods>
<class-id>Poruchy</class-id> <category>accessing</category>

<body package="DaskalosUserClasses" selector="nazev">nazev
"generated by Daskalos"

     ^nazev</body>

<body package="DaskalosUserClasses" selector="nazev:">nazev: anObject
"generated by Daskalos"

     nazev := (self checkValue: anObject forVariable: #nazev)</body>
</methods>

<methods>
<class-id>Poruchy</class-id> <category>instance initialization</category>

<body package="DaskalosUserClasses" selector="initialize">initialize
"generated by Daskalos"

     super initialize.
     nazev := nil.
</body>
</methods>


<class>
<name>NapajeciLinka</name>
<environment>Smalltalk</environment>
<super>DaskalosDataObject</super>
<private>false</private>
<indexed-type>none</indexed-type>
<inst-vars>typ delka kapacita odpor zamestnanci poruchy </inst-vars>
<class-inst-vars></class-inst-vars>
<imports></imports>
<category>DaskalosUserClasses</category>
<attributes>
<package>DaskalosUserClasses</package>
</attributes>
</class>

<!-- -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -   -->


<methods>
<class-id>NapajeciLinka class</class-id> <category>instance variables behavior</category>

<body package="DaskalosUserClasses" selector="instVarTypes">instVarTypes
"resource for Daskalos"
^((Core.Dictionary new) add: (#zamestnanci -&gt; Core.Set); add: (#odpor -&gt; Core.Number); add: (#kapacita -&gt; Core.Number); add: (#typ -&gt; Core.String); add: (#delka -&gt; Core.Number); add: (#poruchy -&gt; Core.Set); yourself)</body>
</methods>

<!-- -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -   -->


<methods>
<class-id>NapajeciLinka</class-id> <category>accessing</category>

<body package="DaskalosUserClasses" selector="delka">delka
"generated by Daskalos"

     ^delka</body>

<body package="DaskalosUserClasses" selector="delka:">delka: anObject
"generated by Daskalos"

     delka := (self checkValue: anObject forVariable: #delka)</body>

<body package="DaskalosUserClasses" selector="kapacita">kapacita
"generated by Daskalos"

     ^kapacita</body>

<body package="DaskalosUserClasses" selector="kapacita:">kapacita: anObject
"generated by Daskalos"

     kapacita := (self checkValue: anObject forVariable: #kapacita)</body>

<body package="DaskalosUserClasses" selector="odpor">odpor
"generated by Daskalos"

     ^odpor</body>

<body package="DaskalosUserClasses" selector="odpor:">odpor: anObject
"generated by Daskalos"

     odpor := (self checkValue: anObject forVariable: #odpor)</body>

<body package="DaskalosUserClasses" selector="poruchy">poruchy
"generated by Daskalos"

     ^poruchy</body>

<body package="DaskalosUserClasses" selector="typ">typ
"generated by Daskalos"

     ^typ</body>

<body package="DaskalosUserClasses" selector="typ:">typ: anObject
"generated by Daskalos"

     typ := (self checkValue: anObject forVariable: #typ)</body>

<body package="DaskalosUserClasses" selector="zamestnanci">zamestnanci
"generated by Daskalos"

     ^zamestnanci</body>
</methods>

<methods>
<class-id>NapajeciLinka</class-id> <category>instance initialization</category>

<body package="DaskalosUserClasses" selector="initialize">initialize
"generated by Daskalos"

     super initialize.
     typ := nil.
     delka := nil.
     kapacita := nil.
     odpor := nil.
     zamestnanci := Set new.
     poruchy := Set new.
</body>
</methods>

<methods>
<class-id>NapajeciLinka</class-id> <category>other methods</category>

<body package="DaskalosUserClasses" selector="aktualniZamestnanci">aktualniZamestnanci
	| resultSet |
	resultSet := Set new.
	zamestnanci do: 
			[:z | 
			z tridy &gt; 1 
				ifTrue: 
					[resultSet add: (Array 
								with: z jmeno
								with: z prijmeni
								with: z tridy)]].
	^resultSet</body>

<body package="DaskalosUserClasses" selector="napeti">napeti
	^(delka * kapacita * odpor * 1000 / 0.8) sqrt</body>
</methods>


<class>
<name>Spotrebiteli</name>
<environment>Smalltalk</environment>
<super>DaskalosDataObject</super>
<private>false</private>
<indexed-type>none</indexed-type>
<inst-vars>tridy kapacita napeti zamestnanci poruchy </inst-vars>
<class-inst-vars></class-inst-vars>
<imports></imports>
<category>DaskalosUserClasses</category>
<attributes>
<package>DaskalosUserClasses</package>
</attributes>
</class>

<!-- -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -   -->


<methods>
<class-id>Spotrebiteli class</class-id> <category>instance variables behavior</category>

<body package="DaskalosUserClasses" selector="instVarTypes">instVarTypes
"resource for Daskalos"
^((Core.Dictionary new) add: (#zamestnanci -&gt; Core.Set); add: (#napeti -&gt; Core.Number); add: (#tridy -&gt; Core.Number); add: (#poruchy -&gt; Core.Set); add: (#kapacita -&gt; Core.Number); yourself)</body>
</methods>

<!-- -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -   -->


<methods>
<class-id>Spotrebiteli</class-id> <category>accessing</category>

<body package="DaskalosUserClasses" selector="kapacita">kapacita
"generated by Daskalos"

     ^kapacita</body>

<body package="DaskalosUserClasses" selector="kapacita:">kapacita: anObject
"generated by Daskalos"

     kapacita := (self checkValue: anObject forVariable: #kapacita)</body>

<body package="DaskalosUserClasses" selector="napeti">napeti
"generated by Daskalos"

     ^napeti</body>

<body package="DaskalosUserClasses" selector="napeti:">napeti: anObject
"generated by Daskalos"

     napeti := (self checkValue: anObject forVariable: #napeti)</body>

<body package="DaskalosUserClasses" selector="poruchy">poruchy
"generated by Daskalos"

     ^poruchy</body>

<body package="DaskalosUserClasses" selector="tridy">tridy
"generated by Daskalos"

     ^tridy</body>

<body package="DaskalosUserClasses" selector="tridy:">tridy: anObject
"generated by Daskalos"

     tridy := (self checkValue: anObject forVariable: #tridy)</body>

<body package="DaskalosUserClasses" selector="zamestnanci">zamestnanci
"generated by Daskalos"

     ^zamestnanci</body>
</methods>

<methods>
<class-id>Spotrebiteli</class-id> <category>instance initialization</category>

<body package="DaskalosUserClasses" selector="initialize">initialize
"generated by Daskalos"

     super initialize.
     tridy := nil.
     kapacita := nil.
     napeti := nil.
     zamestnanci := Set new.
     poruchy := Set new.
</body>
</methods>

<methods>
<class-id>Spotrebiteli</class-id> <category>other methods</category>

<body package="DaskalosUserClasses" selector="aktualniZamestnanci">aktualniZamestnanci
	| resultSet |
	resultSet := List new.
	zamestnanci do: 
			[:z | 
			z tridy = tridy 
				ifTrue: 
					[resultSet
						add: z jmeno;
						add: z prijmeni.
					z sluzby do: [:s | resultSet add: s]]].
	^resultSet</body>
</methods>


<class>
<name>Elektrarna</name>
<environment>Smalltalk</environment>
<super>DaskalosDataObject</super>
<private>false</private>
<indexed-type>none</indexed-type>
<inst-vars>typElektrarny maxVykon spotrebiteliKapacita poruchy </inst-vars>
<class-inst-vars></class-inst-vars>
<imports></imports>
<category>DaskalosUserClasses</category>
<attributes>
<package>DaskalosUserClasses</package>
</attributes>
</class>

<!-- -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -   -->


<methods>
<class-id>Elektrarna class</class-id> <category>instance variables behavior</category>

<body package="DaskalosUserClasses" selector="instVarTypes">instVarTypes
"resource for Daskalos"
^((Core.Dictionary new) add: (#typElektrarny -&gt; Core.String); add: (#maxVykon -&gt; Core.Number); add: (#poruchy -&gt; Core.Set); add: (#spotrebiteliKapacita -&gt; Core.Bag); yourself)</body>
</methods>

<!-- -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -   -->


<methods>
<class-id>Elektrarna</class-id> <category>accessing</category>

<body package="DaskalosUserClasses" selector="maxVykon">maxVykon
"generated by Daskalos"

     ^maxVykon</body>

<body package="DaskalosUserClasses" selector="maxVykon:">maxVykon: anObject
"generated by Daskalos"

     maxVykon := (self checkValue: anObject forVariable: #maxVykon)</body>

<body package="DaskalosUserClasses" selector="poruchy">poruchy
"generated by Daskalos"

     ^poruchy</body>

<body package="DaskalosUserClasses" selector="typElektrarny">typElektrarny
"generated by Daskalos"

     ^typElektrarny</body>

<body package="DaskalosUserClasses" selector="typElektrarny:">typElektrarny: anObject
"generated by Daskalos"

     typElektrarny := (self checkValue: anObject forVariable: #typElektrarny)</body>
</methods>

<methods>
<class-id>Elektrarna</class-id> <category>instance initialization</category>

<body package="DaskalosUserClasses" selector="initialize">initialize
"generated by Daskalos"

     super initialize.
     typElektrarny := nil.
     maxVykon := nil.
     spotrebiteliKapacita := Bag new.
     poruchy := Set new.
</body>
</methods>

<methods>
<class-id>Elektrarna</class-id> <category>other methods</category>

<body package="DaskalosUserClasses" selector="aktualniVykon">aktualniVykon
	^spotrebiteliKapacita inject: 0 into: [:sum :num | sum + num]</body>

<body package="DaskalosUserClasses" selector="spotrebiteliKapacita">spotrebiteliKapacita
	"generated by Daskalos"

	^spotrebiteliKapacita</body>
</methods>


</st-source>
